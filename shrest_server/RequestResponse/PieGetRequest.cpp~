


#define BOOST_SPIRIT_THREADSAFE
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

#include "PieGetRequest.h"

using namespace std;
using namespace boost::property_tree;
PieGetRequest::PieGetRequest(HttpServer::Response &rs, ShRequest rq): RequestResponse(rs, rq){
}

void PieGetRequest::Process(){
     try {
           
        stringstream content_stream;
        content_stream << R"XXX(
 <!DOCTYPE html>
 <html lang="en-US"">
 <head>
  
  <script>
    var myData = new Array(['Jan', 2], ['Feb', 1], ['Mar', 3], ['Apr', 6], ['May', 8], ['Jun', 10], ['Jul', 9], ['Aug', 8], ['Sep', 5], ['Oct', 6], ['Nov', 2], ['Dec', 4]);
var colors = ['#FFCC00', '#FFFF00', '#CCFF00', '#99FF00', '#33FF00', '#00FF66', '#00FF99', '#00FFCC', '#FF0000', '#FF3300', '#FF6600', '#FF9900'];
var myChart = new JSChart('chartid', 'pie');
myChart.setDataArray(myData);
	myChart.colorizePie(colors);
	myChart.setPiePosition(308, 170);
	myChart.setPieRadius(95);
	myChart.setPieUnitsFontSize(8);
	myChart.setPieUnitsColor('#474747');
	myChart.setPieValuesColor('#474747');
	myChart.setPieValuesOffset(-10);
	myChart.setTitleColor('#fff');
	myChart.setSize(616, 321);
	myChart.setBackgroundImage('path/background.jpg');
myChart.draw();		
	</script>

</head>
<body ">
 
</body>
</html>

)XXX";
        
        //find length of content_stream (length received using content_stream.tellp())
        content_stream.seekp(0, ios::end);
        
        rs_ <<  content_stream.rdbuf();
	rs_.flush();
    }
    catch(exception& e) {
        rs_ << "HTTP/1.1 400 Bad Request\r\nContent-Length: " << strlen(e.what()) << "\r\n\r\n" << e.what();
    }
}

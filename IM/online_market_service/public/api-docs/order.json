{
    "apiVersion": "1.0.0", "swaggerVersion": "1.2", "basePath": "/",
    "resourcePath": "/order",
    "produces": ["application/json", "application/xml"],
    "consumes": ["application/json", "application/xml"],
    "apis": [

        {
            "path": "/v1/healthcheck",
            "operations": [
                {
                    "method": "GET",
                    "summary": "health check",
                    "notes": "health check",
                    "type": "void",
                    "nickname": "health check",
                    "authorizations": {},
                    "parameters": {},
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "health check Success",
                            "responseModel": "HealthCheck"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders",
            "operations": [
                {
                    "method": "POST",
                    "summary": "create one order for one user",
                    "notes": "create one order for one user",
                    "type": "void",
                    "nickname": "createOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "The order is created by server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "order create request",
                            "required": true,
                            "type": "OrderSave",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "create order success.",
                            "responseModel": "orderId"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Get all orders under one user. DEPRECATION Notice Date: 2015-05-03",
                    "notes": "Get all orders under one user. DEPRECATION Notice Date: 2015-05-03",
                    "type": "void",
                    "nickname": "getOrdersByUserId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "status",
                            "description": "the status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "default":"INPROCESS",
                            "enum":["INPROCESS","SUBMITTED","ACTIVE", "CANCELED", "CLOSED","PAID"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "The number of order result for per page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "allIncluded",
                            "description": "whether include all items",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "includeEmptyTable",
                            "description": "whether include empty table",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }

                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orders success",
                            "responseModel": "Order"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/past_orders_with_rating",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all orders with rating under one user",
                    "notes": "get all orders with rating under one user",
                    "type": "void",
                    "nickname": "getPastOrdersWithRating",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "index",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "limit",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default value is 50",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orders success",
                            "responseModel": "orderWithRating"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{user_id}/past_orders_only_without_review",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all past orders (without review) per user",
                    "notes": "Get all past orders (without review) per user",
                    "type": "void",
                    "nickname": "getPastOrdersOnlyWithoutReview",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The consumer's user ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default value is 10",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "query_date_time",
                            "description": "A YYYY-MM-DD hh:mm:ss-formatted time that will determine from what time the new data to pull from. Date is needed for Restaurants that operate until past midnight",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "os_type",
                            "description": "The device OS",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "app_version",
                            "description": "The version of the app",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "device_id",
                            "description": "The unique ID of the device. For iOS, this is the IdentifierForVender",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "is_takeout",
                            "description": "is takeout or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "order_type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PREORDER"],
                            "allowMultiple": false
                        },
                        {
                            "name": "locale",
                            "description": "default is ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["en_US","zh_CN"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get orders successful",
                            "responseModel": "OrdersOnlyWithoutReview"
                        },
                        {
                            "code": 204,
                            "message": "Get orders successful, but there is no new content"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurant_id}/restaurant_past_orders_only_without_review",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all past orders (without review) per restaurant",
                    "notes": "Get all past orders (without review) per restaurant",
                    "type": "void",
                    "nickname": "getRestaurantPastOrdersOnlyWithoutReview",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant's ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default value is 10",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "query_date_time",
                            "description": "A YYYY-MM-DD hh:mm:ss-formatted time that will determine from what time the new data to pull from. Date is needed for Restaurants that operate until past midnight",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "os_type",
                            "description": "The device OS",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "app_version",
                            "description": "The version of the app",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "device_id",
                            "description": "The unique ID of the device. For iOS, this is the IdentifierForVender",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "is_takeout",
                            "description": "is takeout or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "include_cancelled_order",
                            "description": "include_cancelled_order",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "the order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PREORDER"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get orders successful",
                            "responseModel": "OrdersOnlyWithoutReview"
                        },
                        {
                            "code": 204,
                            "message": "Get orders successful, but there is no new content"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/restaurants/{restaurant_id}/restaurant_past_orders_only_without_review",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all past orders (without review) per restaurant",
                    "notes": "Get all past orders (without review) per restaurant",
                    "type": "void",
                    "nickname": "getRestaurantPastOrdersOnlyWithoutReviewV2",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant's ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default value is 10",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "query_date_time",
                            "description": "A YYYY-MM-DD hh:mm:ss-formatted time that will determine from what time the new data to pull from. Date is needed for Restaurants that operate until past midnight",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "include_cancelled_order",
                            "description": "include_cancelled_order",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "the order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DINNER", "TAKEOUT", "PREORDER", "DELIVERY", "DINNER_PREORDER", "TAKEOUT_DELIVERY"],
                            "allowMultiple": false
                        },
                        {
                            "name": "os_type",
                            "description": "The device OS",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "app_version",
                            "description": "The version of the app",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "device_id",
                            "description": "The unique ID of the device. For iOS, this is the IdentifierForVender",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get orders successful",
                            "responseModel": "OrdersOnlyWithoutReview"
                        },
                        {
                            "code": 204,
                            "message": "Get orders successful, but there is no new content"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders/{orderId}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get one order which under one user",
                    "notes": "get one order which under one user",
                    "type": "void",
                    "nickname": "get one order which under one user",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get order success",
                            "responseModel": "GetOrderOnlySchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "delete or empty order",
                    "notes": "delete or empty order",
                    "type": "void",
                    "nickname": "delete or clean a cart",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "action",
                            "description": "empty will clean the order content, delete action will delete this order record",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "default":"delete",
                            "enum":["delete","empty"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Delete or empty order successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders/{orderId}/users",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all users which under one order",
                    "notes": "get all users which under one order",
                    "type": "void",
                    "nickname": "get all users which under one order",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },{
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get user success",
                            "responseModel": "OrderCustomersSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "add orderCustomer to order",
                    "notes": "add orderCustomer to order",
                    "type": "void",
                    "nickname": "add orderCustomer to order",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "add user to order request",
                            "required": true,
                            "type": "AddCustomersToOrderSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Add OrderCustomer To Order Success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "delete orderCustomer users by userIds.",
                    "notes": "delete orderCustomer users by userIds.",
                    "type": "void",
                    "nickname": "delete orderCustomer users by userIds",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "owner id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "ids",
                            "description": "orderCustomer userIds,the format like:ids=1,2,3",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },{
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete data successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 403,
                            "message": "OPERATION_NOT_PERMISSION<p>{\"errorCode\":\"OPERATION_NOT_PERMISSION\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/discounts",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "apply discount under one order one user",
                    "notes": "apply discount under one order one user",
                    "type": "void",
                    "nickname": "apply discount under one order one user",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "Apply discount update request",
                            "required": true,
                            "type": "MoneySchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update discount successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders/{orderId}/orderItems",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all orderItems under one order",
                    "notes": "get all orderItems under one order",
                    "type": "void",
                    "nickname": "get all orderItems under one order",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orderItems success",
                            "responseModel": "OrderItemSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "add orderItems to one order",
                    "notes": "add orderItems to one order",
                    "type": "void",
                    "nickname": "add orderItems to one order",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },{
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "add orderItems to order request",
                            "required": true,
                            "type": "AddOrderItemToOrderSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Add OrderItems To Order Successfully",
                            "responseModel": "putOrderItemsResult"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/orderItems/{orderItemId}",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "delete one orderItem from one order under one user",
                    "notes": "delete one orderItem from one order under one user",
                    "type": "void",
                    "nickname": "delete one orderItem from one order under one user",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderItemId",
                            "description": "The orderItem id for delete",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete orderItem successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders/{orderId}/orderItems/{orderItemId}/prices",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "adjust orderItem's price under one order one user",
                    "notes": "adjust orderItem's price under one order one user",
                    "type": "void",
                    "nickname": "updateOrderItemPriceByOrderItemId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderItemId",
                            "description": "The orderItem id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },{
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "item price update request",
                            "required": true,
                            "type": "MoneySchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Update orderItem's price successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/orders/{orderId}/orderItems/{orderItemId}/quantities/{quantity}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update quantity under the orderItem",
                    "notes": "update quantity under the orderItem",
                    "type": "void",
                    "nickname": "update quantity under the orderItem",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderItemId",
                            "description": "The orderItem id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "quantity",
                            "description": "the orderItem quantity",
                            "required": true,
                            "type": "integer",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Update Quantity Under The Order successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/actions/{action}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order status by orderId",
                    "notes": "update order status by orderId",
                    "type": "void",
                    "nickname": "update order status by orderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "action",
                            "description": "action: submit or close or pay or picked_up",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "default":"submit",
                            "enum":["submit","close","pay","picked_up", "ready", "delivered"],
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "isServer type：TRUE or FALSE",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "the body",
                            "required": false,
                            "type": "TableSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order status successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/tables",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order table by orderId",
                    "notes": "update order table by orderId",
                    "type": "void",
                    "nickname": "update order table by orderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "Apply request",
                            "required": true,
                            "type": "tableId",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order table successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/servers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get order servers by orderId",
                    "notes": "get order servers by orderId",
                    "type": "void",
                    "nickname": "get order servers by orderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get order servers success",
                            "responseModel": "orderServerInfo"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/orders/{orderId}/servers",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order servers by orderId",
                    "notes": "update order servers by orderId",
                    "type": "void",
                    "nickname": "update order servers by orderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "Apply request",
                            "required": true,
                            "type": "orderServers",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order servers successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/haveeaten_restaurants",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get have eaten restaurants",
                    "notes": "get have eaten restaurants",
                    "type": "void",
                    "nickname": "have eaten restaurants",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "userId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "keyword",
                            "description": "search key word eg:restaurant name, dish name",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "pageSize cannot more than 50",
                            "required": false,
                            "default":50,
                            "type": "number",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurants success",
                            "responseModel": "restaurantIds"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{userId}/lastOrderTime",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get one's last order time by userId",
                    "notes": "get one's last order time by userId",
                    "type": "void",
                    "nickname": "get one's last order time by userId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "lastOrderTime",
                            "responseModel": "lastOrderTime"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]

                }
            ]},

        {"path": "/v1/users/{userId}/resume_orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get one's resume orders by userId",
                    "notes": "get one's resume orders by userId",
                    "type": "void",
                    "nickname": "get one's resume orders by userId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get resume orders"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]

                }
            ]},

        {"path": "/v1/users/{userId}/reservations",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get user reservations",
                    "notes": "get user reservations",
                    "type": "void",
                    "nickname": "getReservationByUserId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "restaurantId",
                            "description": "The restaurantId id",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get reservation successfully.",
                            "responseModel": "ReservationsPreOrderSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{userId}/reservations",
            "operations": [
                {
                    "method": "POST",
                    "summary": "create a reservation or wait now",
                    "notes": "create a reservation or wait now",
                    "type": "void",
                    "nickname": "create a reservation or wait now",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "create reservation request body",
                            "required": true,
                            "type": "ReservationSave",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "create reservation successfully.",
                            "responseModel": "reservationId"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/restaurants/{restaurantId}/reservations",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all reservations or wait now under restaurant",
                    "notes": "get all reservations or wait now under restaurant",
                    "type": "void",
                    "nickname": "get all reservations or wait now under restaurant",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "The restaurant id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "type",
                            "description": "is a reservation or not",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["reservation","waitnow"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get reservations successfully.",
                            "responseModel": "ReservationSave"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/reservations/{reservationId}",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "delete a reservation",
                    "notes": "delete a reservation",
                    "type": "void",
                    "nickname": "delete a reservation",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "reservationId",
                            "description": "The reservation id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Delete reservations successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "update a reservation",
                    "notes": "update a reservation",
                    "type": "void",
                    "nickname": "update a reservation",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "reservationId",
                            "description": "The reservation id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "update reservation request body",
                            "required": true,
                            "type": "ReservationSave",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Update reservations successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/reservations",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "delete all reservation under a restaurant",
                    "notes": "delete all reservation under a restaurant",
                    "type": "void",
                    "nickname": "delete all reservation under a restaurant",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "The restaurant id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Delete reservations successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/tables/{tableId}/servers/{userId}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "assign a server to a tables",
                    "notes": "assign a server to a tables",
                    "type": "void",
                    "nickname": "assign server",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "assign server success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "delete server a tables",
                    "notes": "delete server a tables",
                    "type": "void",
                    "nickname": "delete server",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete server success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/tables/{tableId}/servers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get tables servers",
                    "notes": "get tables servers",
                    "type": "void",
                    "nickname": "tables servers",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get tables servers",
                            "responseModel": "TableServerUserId"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/tables/{tableId}/bussers/{userId}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "assign a  bussers to a tables",
                    "notes": "assign a bussers to a tables",
                    "type": "void",
                    "nickname": "assign bussers",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "assign bussers success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "delete bussers a tables",
                    "notes": "delete bussers a tables",
                    "type": "void",
                    "nickname": "delete bussers",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete bussers success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/tables/{tableId}/bussers",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get table bussers",
                    "notes": "get table bussers",
                    "type": "void",
                    "nickname": "get bussers",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "tableId",
                            "description": "the tableId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get bussers",
                            "responseModel": "TableBusserUserId"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/servers/{userId}/tables",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get user server all table",
                    "notes": "get user server all table",
                    "type": "void",
                    "nickname": "get user server all table",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "the user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get tables",
                            "responseModel": "ServerTables"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/bussers/{userId}/tables",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get user bussers all table",
                    "notes": "get user bussers all table",
                    "type": "void",
                    "nickname": "get user bussers all table",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "userId",
                            "description": "the user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get tables",
                            "responseModel": "ServerTables"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurantId}/tableAssignments",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all the table assignments",
                    "notes": "get all the table assignments",
                    "type": "void",
                    "nickname": "get all the table assignments",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get tables",
                            "responseModel": "TableAssignments"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "update table assignment in a restaurnt",
                    "notes": "update table assignment in a restaurnt",
                    "type": "void",
                    "nickname": "update table assignment in a restaurnt",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "body",
                            "description": "update table assignment request body",
                            "required": true,
                            "type": "TableAssignments",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update table assignment success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/transactions",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get transactions. DEPRECATION Notice Date: 2015-05-10, do not direct use again.",
                    "notes": "get transactions. DEPRECATION Notice Date: 2015-05-10, do not direct use again.",
                    "type": "void",
                    "nickname": "get transactions",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "the restaurantId",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "orderId",
                            "description": "the orderId",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "from",
                            "description": "the from",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "the pageSize",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "date_time_from",
                            "description": "Get order transaction by dateTime range(date_time_from format:2015-05-03 23:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "date_time_to",
                            "description": "Get order transaction by dateTime range(date_time_to format:2015-05-03 23:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get tables"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get order info by userids",
                    "notes": "get order info by userids",
                    "type": "void",
                    "nickname": "getOrders",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "userid",
                            "description": "user ids eg:a,b,c",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "pageSize cannot more than 50",
                            "required": false,
                            "default":50,
                            "type": "number",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orders success",
                            "responseModel": "UserOrderSchema"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "delete all orders which under one restaurant",
                    "notes": "delete all orders which under one restaurant",
                    "type": "void",
                    "nickname": "delete all orders which under one restaurant",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurantId",
                            "description": "The restaurant id",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete orders successfully"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{orderId}/tips",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update tip amount by order id",
                    "notes": "update tip amount by order id",
                    "type": "void",
                    "nickname": "updateTipAmount",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "order create request",
                            "required": true,
                            "type": "OrderTips",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update order tip success.",
                            "responseModel": "TipTotalAmountSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/tips",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update tip amount by order id",
                    "notes": "update tip amount by order id",
                    "type": "void",
                    "nickname": "updateTipAmount",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "order create request",
                            "required": true,
                            "type": "OrderTips",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update order tip success.",
                            "responseModel": "TipTotalAmountSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{orderId}/bills",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the bill which under one order. DEPRECATION Notice Date: 2015-05-10",
                    "notes": "Get the bill which under one order. DEPRECATION Notice Date: 2015-05-10. Redirect to `/v2/orders/{order_id}/bill`",
                    "type": "void",
                    "nickname": "getBillsByOrderIdV1",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "userId",
                            "description": "The user who will lock/pay the bill,default is the owner of the order or the user who has already locked the order",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "isServer",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "useBlueDollars",
                            "description": "whether use blue dollar or not,default is true",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "buyBlueDollars",
                            "description": "whether buy blue dollar from others or not, default is true",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "useGoldDollars",
                            "description": "whether use gold dollar or not,default is true",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "isOnlinePayment",
                            "description": "whether is online payment or not,default is online payment",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get order success",
                            "responseModel": "OrderOnlySchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "unlock the bill which under one order. DEPRECATION Notice Date: 2015-05-10",
                    "notes": "unlock the bill which under one order. DEPRECATION Notice Date: 2015-05-10",
                    "type": "void",
                    "nickname": "unlockBillsByOrderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "userId",
                            "description": "The user who will unlock the bill",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "unlock order success"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{orderId}/settlements",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "mark an order settlement done by orderId",
                    "notes": "mark an order settlement done by orderId",
                    "type": "void",
                    "nickname": "mark an order settlement done by orderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "orderId",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "mark an order settlement done success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 409,
                            "message":"DATA_CONFLICTED.<p><p>{\"errorCode\":\"DATA_CONFLICTED\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orders/{order_id}/printed_flags",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the order printed flags",
                    "notes": "Get the order printed flags",
                    "type": "void",
                    "nickname": "getOrderPrintedFlags",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "isIncludeAll",
                            "description": "whether is include chit flag in order items, default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":[true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get printed flag success",
                            "responseModel": "PrintedFlags"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orderItems/printed_flags",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get the order item printed flags",
                    "notes": "Get the order item printed flags",
                    "type": "void",
                    "nickname": "getOrderItemPrintedFlags",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_item_id",
                            "description": "The order item ids by commas",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get printed flag success",
                            "responseModel": "OrderItem"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orders/{order_id}/receipt_printed/{printed_flag}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update an order receipt_printed flag",
                    "notes": "update an order receipt_printed flag",
                    "type": "void",
                    "nickname": "updateOrderPrintedFlag",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "printed_flag",
                            "description": "The printed flag",
                            "required": false,
                            "type": "boolean",
                            "paramType": "path",
                            "enum":[true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order printed flag successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orderItems/{order_item_id}/chit_printed/{printed_flag}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update an order chit_printed flag",
                    "notes": "update an order chit_printed flag",
                    "type": "void",
                    "nickname": "updateOrderItemPrintedFlag",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_item_id",
                            "description": "The order item id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "printed_flag",
                            "description": "The printed flag",
                            "required": false,
                            "type": "boolean",
                            "paramType": "path",
                            "enum":[true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order item printed flag successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orderItems/chit_printed/{printed_flag}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update some order items chit_printed flag",
                    "notes": "update some order items chit_printed flag",
                    "type": "void",
                    "nickname": "updateOrderItemsPrintedFlag",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_item_id",
                            "description": "The order item ids by commas",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "printed_flag",
                            "description": "The printed flag",
                            "required": false,
                            "type": "boolean",
                            "paramType": "path",
                            "enum":[true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order item printed flag successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/reservations/{reservation_id}/pre-orders",
            "operations": [
                {
                    "method": "POST",
                    "summary": "create a pre-order under a reservation",
                    "notes": "create a pre-order under a reservation",
                    "type": "void",
                    "nickname": "createPreOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "reservation_id",
                            "description": "The reservation id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "create reservation successfully.",
                            "responseModel": "reservationId"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all pre-orders by user_id",
                    "notes": "get all pre-orders by user_id",
                    "type": "void",
                    "nickname": "getPreOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get pre-order successfully.",
                            "responseModel": "PreOrderSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/reservations/{reservation_id}/pre-orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all pre-orders by reservation_id",
                    "notes": "get all pre-orders by reservation_id",
                    "type": "void",
                    "nickname": "getPreOrderByReservationId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "reservation_id",
                            "description": "The reservation id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get pre-order successfully.",
                            "responseModel": "PreOrderSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders/{pre_order_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get  pre-orders by pre_order_id",
                    "notes": "get pre-orders by pre_order_id",
                    "type": "void",
                    "nickname": "getPreOrderById",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "pre_order_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get pre-order successfully.",
                            "responseModel": "PreOrderSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders/{pre_order_id}",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "delete pre-orders by pre_order_id",
                    "notes": "delete pre-orders by pre_order_id",
                    "type": "void",
                    "nickname": "deletePreOrderById",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "pre_order_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete pre-order successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders/{pre_order_id}/order_items",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "add pre-orders orderItems",
                    "notes": "add pre-orders orderItems",
                    "type": "void",
                    "nickname": "updatePreOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "pre_order_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "add pre-order orderItems",
                            "required": true,
                            "type": "AddOrderItemToOrderSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "add pre-order orderItems successfully."
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders/{pre_order_id}/order_items/{order_item_id}",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "delete pre-orders orderItem",
                    "notes": "delete pre-orders orderItem",
                    "type": "void",
                    "nickname": "deletePreOrderItem",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "pre_order_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_item_id",
                            "description": "The orderItem id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "delete pre-order orderItem successfully."
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/pre-orders/{pre_order_id}/submit",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "submit pre-orders info",
                    "notes": "submit pre-orders info",
                    "type": "void",
                    "nickname": "submitPreOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "pre_order_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "submit pre-order successfully."
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/reservations/{reservation_id}/complete",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "complete reservation",
                    "notes": "complete reservation",
                    "type": "void",
                    "nickname": "completeReservation",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "reservation_id",
                            "description": "The pre-order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "table_id",
                            "description": "restaurant table id",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "submit pre-order successfully."
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/users/{user_id}/orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all orders under one user",
                    "notes": "get all orders under one user",
                    "type": "void",
                    "nickname": "get all orders under one user",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "restaurant_id",
                            "description": "the restaurant id",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "is_server",
                            "description": "is server or not",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "table_id",
                            "description": "the table id",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "status",
                            "description": "the status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "default":"INPROCESS",
                            "enum":["INPROCESS","SUBMITTED","ACTIVE", "CANCELED", "CLOSED","PAID"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The number of order result for per page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "all_included",
                            "description": "whether include all items",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "include_empty_table",
                            "description": "whether include empty table",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "date_time_from",
                            "description": "Get orders by dateTime range(date_time_from format:2015-05-03 23:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "date_time_to",
                            "description": "Get orders by dateTime range(date_time_to format:2015-05-04 01:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }

                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orders success",
                            "responseModel": "OrderSchemaV2"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/orders/{order_id}/order_items",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all order items",
                    "notes": "Get all order items",
                    "type": "void",
                    "nickname": "getOrderItemsComments",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The consumer's user ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "order_id",
                            "description": "The order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "locale",
                            "description": "default is ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["en_US","zh_CN"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get order items successful",
                            "responseModel": "OrderItemsSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/past_orders/{order_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get all order items in one past order",
                    "notes": "Get all order items in one past order",
                    "type": "void",
                    "nickname": "getPastOrderItemsComments",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The consumer's user ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "order_id",
                            "description": "The order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get order items successful",
                            "responseModel": "OrderItemsSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/current_orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get current order",
                    "notes": "Get current order",
                    "type": "void",
                    "nickname": "getCurrentOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The consumer's user ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get current order successful",
                            "responseModel": "CurrentOrder"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/orders/{order_id}/close_as_paid",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "close an order as paid directly",
                    "notes": "close an order as paid directly",
                    "type": "void",
                    "nickname": "closeOrderAsPaid",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order status successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v2/orders/{order_id}/bill",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get bill by Order ID",
                    "notes": "Get bill by Order ID. This API will pull the bill based on order_id which has status of `SUBMITTED` and has menu items with price greater than zero",
                    "type": "void",
                    "nickname": "getBillByOrderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The user who will lock/pay the bill, default is the owner of the order or the user who has already locked the order",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "use_blue_dollars",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "buy_blue_dollars",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "use_gold_dollars",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_online_payment",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get order success",
                            "responseModel": "BillSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/users/{user_id}/order_items_per_unit_price",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Add order items that are `per-unit` in price.",
                    "notes": "Please take note that both `per_unit_regular_price`, `per_unit_personalized_price`, and `per_unit_customer_specific_price` are optional attributes but you will need to pass one of them to the API </br></br>Response JSON Structure (Wiki) reference: https://fandine.atlassian.net/wiki/display/RD/v2+Update+Order+-+add+order+items+-+per+unit+price",
                    "type": "void",
                    "nickname": "addOrderItemsPerUnitPrice",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "Order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The User ID of the person who is submitting the order",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "TRUE if the `user_id` belongs to a server, otherwise, FALSE",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "Order item in JSON format",
                            "required": true,
                            "type": "AddOrderItemsPerUnitPrice",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Order was updated successfully with new Order Items"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/users/{user_id}/order_items_fix_price",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Add order items that are `fix` in price.",
                    "notes": "Please take note that `fix_regular_price`, `fix_personalized_price`, and `fix_customer_specific_price` are optional attributes but you will need to pass one of them to the API </br></br>Response JSON Structure (Wiki) reference: https://fandine.atlassian.net/wiki/display/RD/v2+Update+Order+-+add+order+items+-+per+unit+price",
                    "type": "void",
                    "nickname": "addOrderItemsPerUnitPrice",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "Order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The User ID of the person who is submitting the order",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "TRUE if the `user_id` belongs to a server, otherwise, FALSE",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "Order item in JSON format",
                            "required": true,
                            "type": "AddOrderItemsFixPrice",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Order was updated successfully with new Order Items"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v2/orders/{order_id}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET single order details",
                    "notes": "GET single order details",
                    "type": "void",
                    "nickname": "GETSingleOrderDetails",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "the orderId",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "This will serve as the owner of the order. Other values are 'TRUE'",
                            "required": false,
                            "enum": ["TRUE", "FALSE"],
                            "type": "boolean",
                            "paramType": "query"
                        }

                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "restaurants statistics",
                            "responseModel": "OrderItemsDetals"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v2/transactions",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET restaurant transactions",
                    "notes": "GET restaurant transactions",
                    "type": "void",
                    "nickname": "getRestaurantTransactions",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "status",
                            "description": " settlement status: unsettled or settled ",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["unsettled","settled", "all"],
                            "allowMultiple": false
                        },
                        {
                            "name": "restaurant_id",
                            "description": "Restaurant id. For testing, use example: `cc223b1b-4cd8-4134-ae55-85599d1f75fc`",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "order_id",
                            "description": "the orderId",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "is_online_payment",
                            "description": "default ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "online_payment_type",
                            "description": " online payment type: WECHATPAY, ALIPAY",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["ALIPAY","WECHATPAY", "STRIPE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["DINNER", "TAKEOUT", "PREORDER"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default is all records.",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "date_from",
                            "description": "Start date of filter. Format: YYYY-MM-DD hh:mm:ss. For example, to get the statistics sales summary for June 15th, 2015, then `date_from` value should be `2015-06-15 00:00:00`",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "date_to",
                            "description": "Last date of filter. Format: YYYY-MM-DD hh:mm:ss. For example, to get the statistics sales summary for June 15th, 2015, then `date_to` value should be `2015-06-15 23:59:59`",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "for_report",
                            "description": "true or false, default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": [true, false],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_active_city",
                            "description": "true or false, default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": [true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "restaurants statistics",
                            "responseModel": "OrderSchemaV2"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v3/transactions",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET restaurant transactions",
                    "notes": "GET restaurant transactions",
                    "type": "void",
                    "nickname": "getRestaurantTransactionsV3",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "status",
                            "description": " settlement status: unsettled or settled ",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["unsettled","settled", "all"],
                            "allowMultiple": false
                        },
                        {
                            "name": "restaurant_id",
                            "description": "Restaurant id. For testing, use example: `cc223b1b-4cd8-4134-ae55-85599d1f75fc`",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "is_online_payment",
                            "description": "default ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "online_payment_type",
                            "description": " online payment type: WECHATPAY, ALIPAY",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["ALIPAY","WECHATPAY", "STRIPE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["DINNER", "TAKEOUT", "PREORDER"],
                            "allowMultiple": false
                        },
                        {
                            "name": "date_from",
                            "description": "Start date of filter. Format: YYYY-MM-DD. For example, to get the statistics sales summary for June 15th, 2015, then `date_from` value should be `2015-06-15`",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "date_to",
                            "description": "Last date of filter. Format: YYYY-MM-DD. For example, to get the statistics sales summary for June 15th, 2015, then `date_to` value should be `2015-06-15`",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "page size, default 50",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "restaurants statistics",
                            "responseModel": "OrderSchemaV2"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v2/transactions/download",
            "operations": [
                {
                    "method": "GET",
                    "summary": "download restaurant transactions",
                    "notes": "download restaurant transactions",
                    "type": "void",
                    "nickname": "downloadRestaurantTransactions",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "status",
                            "description": " settlement status: unsettled or settled ",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["unsettled","settled", "all"],
                            "allowMultiple": false
                        },
                        {
                            "name": "restaurant_id",
                            "description": "Restaurant id. For testing, use example: `cc223b1b-4cd8-4134-ae55-85599d1f75fc`",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "order_id",
                            "description": "the orderId",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "is_online_payment",
                            "description": "default ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "online_payment_type",
                            "description": " online payment type: WECHATPAY, ALIPAY",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["ALIPAY","WECHATPAY", "STRIPE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_type",
                            "description": "order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum": ["DINNER", "TAKEOUT", "PREORDER"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default is all records.",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "date_from",
                            "description": "Start date of filter. Format: YYYY-MM-DD. For example, to get the statistics sales summary for June 15th, 2015, then `date_from` value should be `2015-06-15`",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "date_to",
                            "description": "Last date of filter. Format: YYYY-MM-DD. For example, to get the statistics sales summary for June 15th, 2015, then `date_to` value should be `2015-06-15`",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "for_report",
                            "description": "true or false, default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": [true, false],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_active_city",
                            "description": "true or false, default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": [true, false],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "restaurants statistics",
                            "responseModel": "OrderSchemaV2"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/simple_bill",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get simplified bill by Order ID",
                    "notes": "This API will pull the bill based on order_id which has status of `SUBMITTED` and has menu items with price greater than zero. This API is using the `/v2/orders/{order_id}/bill`",
                    "type": "void",
                    "nickname": "getSimplifiedBillByOrderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The user who will lock/pay the bill, default is the owner of the order or the user who has already locked the order",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum": ["TRUE", "FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_online_payment",
                            "description": "If `true` (default)....... otherwise ....... ",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "locale",
                            "description": "default is 'en_US'",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["en_US","zh_CN"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get order success",
                            "responseModel": "SimplifiedBillSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },
        {"path": "/v1/users/{user_id}/orders/{order_id}/close_order",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "close order by orderId",
                    "notes": "close order by orderId",
                    "type": "void",
                    "nickname": "closeorderbyorderId",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "isServer type：TRUE or FALSE",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "default":"true",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_online_payment",
                            "description": "If `true` online payment (default) otherwise offline payment ",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["TRUE","FALSE"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "close order successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {"path": "/v1/users/{user_id}/orders/{order_id}/cancel_order",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "cancel order by orderId",
                    "notes": "cancel order by orderId <p> 1.If order status is INPROCESS or SUBMITTED, user can cancel the order <p> 2.If order status is PAID, will return 'order has been paid' <p> 3.If order status is CLOSED, will return 'order has been closed' <p> 4.If order status is CANCELED, user can cancel the order directly ",
                    "type": "void",
                    "nickname": "cancelOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "isServer type：true or false, default is false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "default":"false",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "user reason for cancelling order",
                            "required": false,
                            "type": "CancelOrderReasonSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "cancel order successfully"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 409,
                            "message": "DATA_CONFLICTED<p>{\"errorCode\":\"DATA_CONFLICTED\", \"fieldName\":\"orderId\", \"fieldValue\":\"xxxxxxx\", \"messages\": {\"messageCode\": \"ORDER_PAID\",\"en\": \"order has been paid\",\"cn\": \"订单已经支付\"}}",
                            "responseModel": "ErrorMessage"
                        },
                        {
                            "code": 409,
                            "message": "DATA_CONFLICTED<p>{\"errorCode\":\"DATA_CONFLICTED\", \"fieldName\":\"orderId\", \"fieldValue\":\"xxxxxxx\", \"messages\": {\"messageCode\": \"ORDER_CLOSED\",\"en\": \"order has been closed\",\"cn\": \"订单已经关闭\"}}",
                            "responseModel": "ErrorMessage"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]},

        {
            "path": "/v1/users/{user_id}/orders/{order_id}/request_bill",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Get order status(push request_bill message) by orderId",
                    "notes": "Get order status (push request_bill message) by orderId",
                    "type": "void",
                    "nickname": "requestBill",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get order status successfully",
                            "responseModel": "OrderStatusSchema"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/users/{user_id}/simple_orders",
            "operations": [
                {
                    "method": "POST",
                    "summary": "create one order for one user",
                    "notes": "create one order for one user",
                    "type": "void",
                    "nickname": "createSimpleOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_server",
                            "description": "is server: default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query"
                        },
                        {
                            "name": "is_takeout",
                            "description": "is takeout: default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query"
                        },
                        {
                            "name": "order_type",
                            "description": "order_type",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PREORDER", "DELIVERY", "DINNER"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_aa",
                            "description": "is aa: default false",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query"
                        },
                        {
                            "name": "body",
                            "description": "order create request",
                            "required": true,
                            "type": "SimpleOrderSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "create order success.",
                            "responseModel": "orderId"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/notes",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order notes",
                    "notes": "update order notes",
                    "type": "void",
                    "nickname": "updateNotesOrder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "order note",
                            "required": true,
                            "type": "OrderNoteSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order note success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/picked_up_time",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update picked up time",
                    "notes": "update picked up time",
                    "type": "void",
                    "nickname": "updatePickedUpTime",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "order picked up time",
                            "required": true,
                            "type": "OrderPickedUpTimeSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order note success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 409,
                            "message":"DATA_CONFLICTED.<p><p>{\"errorCode\":\"DATA_CONFLICTED\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{order_id}/action/{action}/print",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order print number",
                    "notes": "update order print number",
                    "type": "void",
                    "nickname": "updateOrderPrint",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "action",
                            "description": "action, now only support kitchen",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":["kitchen"],
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order note success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurant_id}/order_stat",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get restaurant order stat",
                    "notes": "get restaurant order stat",
                    "type": "void",
                    "nickname": "getRestaurantOrderStat",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "start_date",
                            "description": "the start date: 2016-01-27T16:00:00.000Z",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_date",
                            "description": "the end date: 2016-01-27T16:00:00.000Z",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant order stat success",
                            "responseModel": "RestaurantOrderStatSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/currency/{currency}/order_stat",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get currency order stat",
                    "notes": "get currency order stat",
                    "type": "void",
                    "nickname": "getCurrencyOrderStat",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "currency",
                            "description": "currency",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":["CNY","CAD","USD"],
                            "allowMultiple": false
                        },
                        {
                            "name": "start_date",
                            "description": "the start date: 2016-01-27",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_date",
                            "description": "the end date: 2016-01-27, default is current date",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant order stat success",
                            "responseModel": "RestaurantOrderStatSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurant_id}/summary",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get restaurant summary",
                    "notes": "get restaurant summary",
                    "type": "void",
                    "nickname": "getRestaurantSummary",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "is_takeout",
                            "description": "is takeout or not, default is all",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query"
                        },
                        {
                            "name": "query_start_time",
                            "description": "the start time: 2016-01-27 10:00:00, default is today 00:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "query_end_time",
                            "description": "the end time: 2016-01-27 10:00:00, default is today 24:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant summary success",
                            "responseModel": "RestaurantSummarySchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/city_order_stat",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get order stat",
                    "notes": "get order stat",
                    "type": "void",
                    "nickname": "getOrderStat",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "stat_type",
                            "description": "the type of stat: SEPARATION, COMBINATION, default is SEPARATION",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["SEPARATION", "COMBINATION"],
                            "allowMultiple": false
                        },
                        {
                            "name": "time_type",
                            "description": "the time type: by hour, by day, by week..., default is DAY",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DAY", "HOUR","WEEK", "MONTH"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_online_payment",
                            "description": "Is Online Payment",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["", "TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "include_cancelled_order",
                            "description": "include_cancelled_order",
                            "required": false,
                            "type": "boolean",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "start_date",
                            "description": "the start date: 2016-01-27",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_date",
                            "description": "the end date: 2016-01-27, default is current date",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant order stat success",
                            "responseModel": "CityOrderStatSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/cities/{city_id}/restaurants_order_count_stat",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get city restaurants order count stat",
                    "notes": "get city restaurants order count stat",
                    "type": "void",
                    "nickname": "getCityRestaurantsOrderCountStat",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "city_id",
                            "description": "city id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "stat_type",
                            "description": "the type of stat: SEPARATION, COMBINATION, default is SEPARATION",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["SEPARATION", "COMBINATION"],
                            "allowMultiple": false
                        },
                        {
                            "name": "time_type",
                            "description": "the time time: by hour, by day, by week...",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DAY", "HOUR","WEEK", "MONTH"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_online_payment",
                            "description": "Is Online Payment",
                            "required": true,
                            "type": "string",
                            "paramType": "query",
                            "enum":["", "TRUE","FALSE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "start_date",
                            "description": "the start date: 2016-01-27",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_date",
                            "description": "the end date: 2016-01-27, default is current date",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant order stat success",
                            "responseModel": "CityOrderStatSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{user_id}/orders/{order_id}/edit_order_items",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "edit order items",
                    "notes": "edit order items",
                    "type": "void",
                    "nickname": "editOrderItems",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "batch_no",
                            "description": "the version of order items",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "body",
                            "description": "order create request",
                            "required": true,
                            "type": "EditOrderItemsSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "add order items success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{order_id}/printers/{printer_id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order printers",
                    "notes": "update order printers",
                    "type": "void",
                    "nickname": "updateOrderPrinters",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "printer_id",
                            "description": "The printer id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "printer number",
                            "required": true,
                            "type": "OrderPrintedNumberSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order printers success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{order_id}/order_items/{order_item_id}/printers/{printer_id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order item printed number",
                    "notes": "update order item printed number",
                    "type": "void",
                    "nickname": "updateOrderItemPrintedNumber",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_item_id",
                            "description": "The order item id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "printer_id",
                            "description": "The printer id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "printed number",
                            "required": true,
                            "type": "OrderItemPrintedNumberSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order item printed number success.",
                            "responseModel": ""
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/tasks/{task_id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update task printed number and info ",
                    "notes": "update task printed number and info",
                    "type": "void",
                    "nickname": "updateTaskPrintedNumber",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "task_id",
                            "description": "The task id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "printed number  and info",
                            "required": true,
                            "type": "TaskPrintedNumberSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update task printed number success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/devices/{device_id}/print_tasks",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get print tasks",
                    "notes": "get print tasks",
                    "type": "void",
                    "nickname": "getPrintTasks",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "The device id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "printer_id",
                            "description": "The printer id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "start_time",
                            "description": "The start time: 2016-03-17 10:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "locale",
                            "description": "default is ''",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["en_US","zh_CN"],
                            "allowMultiple": false
                        }

                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get print tasks success.",
                            "responseModel": "PrintTaskSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/operations",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get operations",
                    "notes": "get operations",
                    "type": "void",
                    "nickname": "getOperations",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "action",
                            "description": "The action id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "query_start_time",
                            "description": "The start time: 2016-03-17 10:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "query_end_time",
                            "description": "The end time: 2016-03-18 10:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "the from page, default is 1",
                            "required": false,
                            "type": "integer",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "page_size",
                            "description": "the page size, default is 50",
                            "required": false,
                            "type": "integer",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "os_type",
                            "description": "the os type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "app_version",
                            "description": "the app version",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "device_id",
                            "description": "the device id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get operations success.",
                            "responseModel": "OderOperationsSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v2/operations",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get operations",
                    "notes": "get operations",
                    "type": "void",
                    "nickname": "getOperationsV2",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "user_id",
                            "description": "The user id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "action",
                            "description": "The action id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "query_start_time",
                            "description": "The start time: 2016-03-17 10:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "query_end_time",
                            "description": "The end time: 2016-03-18 10:00:00",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "the from page, default is 1",
                            "required": false,
                            "type": "integer",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "page_size",
                            "description": "the page size, default is 50",
                            "required": false,
                            "type": "integer",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "os_type",
                            "description": "the os type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "app_version",
                            "description": "the app version",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "device_id",
                            "description": "the device id",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get operations success.",
                            "responseModel": "OderOperationsSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/orders/{order_id}/online_close_order",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "close the order change blue dollar status",
                    "notes": "close the order change blue dollar status",
                    "type": "void",
                    "nickname": "closeOrderAndChangeBlueDollarStatus",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "update order success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {
            "path": "/v1/first_order_statistics",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get online payment order counts,group by whether is first time",
                    "notes": "Get online payment order counts, date range not more than 90 days.",
                    "nickname": "Get_first_order_statistics",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "start_date",
                            "description": "start date, eg: 2015-05-10",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "end_date",
                            "description": "start date, eg: 2015-10-10",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "responseModel": "OrderCountsSchema"
                        },
                        {
                            "code": 404,
                            "message": "User account does not exist<p>{\"errorCode\":\"USER_NOT_EXIST\", \"errorField\":\"phoneNumber\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/all_orders",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get all orders.",
                    "notes": "get all orders.",
                    "type": "void",
                    "nickname": "getAllOrders",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "the restaurant id",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "restaurant_name",
                            "description": "the restaurant name",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "order_type",
                            "description": " the order type",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DINNER","TAKEOUT","PREORDER","DELIVERY"],
                            "allowMultiple": false
                        },
                        {
                            "name": "order_status",
                            "description": " the order status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["CANCELLED","SUBMITTED","CLOSED","INPROCESS","PAID"],
                            "allowMultiple": false
                        },
                        {
                            "name": "delivery_status",
                            "description": " the order's delivery status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PREPARING","READY","DELIVERED"],
                            "allowMultiple": false
                        },
                        {
                            "name": "takeout_status",
                            "description": " the order's takeout status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PAID","PICKEDUP"],
                            "allowMultiple": false
                        },

                        {
                            "name": "from",
                            "description": "the from",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "the page size,default size:50",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "from_date",
                            "description": "Get orders by dateTime range(from_date format:2015-05-03 23:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "to_date",
                            "description": "Get order by dateTime range(to_date format:2015-05-03 23:00:00)",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get orders success",
                            "responseModel": "OrderSchemaV2"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/users/{user_id}/orders/{order_id}/reorder",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get reorder",
                    "notes": "get reorder",
                    "type": "void",
                    "nickname": "getReorder",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "user_id",
                            "description": "user_id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "order_id",
                            "description": "order_id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get restaurant order stat success",
                            "responseModel": "ReorderSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/orders/{order_id}/customer_copy_tag",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update the tag of customer copy",
                    "notes": "update the tag of customer copy",
                    "type": "void",
                    "nickname": "updateCustomerCopyTag",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update customer copy tag success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/v1/orders/{order_id}/pre_order_print_notice",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Notify restaurant order coming",
                    "notes":  "print order for notice",
                    "type": "void",
                    "nickname": "preorderprintnotice",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "stripe transaction saved.",
                            "responseModel": "savePaymentsResponse"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/order/{order_id}/user/{user_id}/checkin",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update order status and notify kitchen",
                    "notes": "mark auth order checkin",
                    "type": "void",
                    "nickname": "customerCheckin",
                    "authorizations": {},
                    "parameters": [
                      {
                        "name": "order_id",
                        "description": "The order id",
                        "required": true,
                        "type": "string",
                        "paramType": "path",
                        "allowMultiple": false
                      },
                      {
                        "name": "user_id",
                        "description": "The customer id",
                        "required": true,
                        "type": "string",
                        "paramType": "path",
                        "allowMultiple": false
                      }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update customer copy tag success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/order/{order_id}/order_tip",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "customer change default tip",
                    "notes": "customer change tip denoting  irregular service",
                    "type": "void",
                    "nickname": "customerChangeTip",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "tip_rate",
                            "description": "expected tip rate to pay",
                            "required": true,
                            "type": "Number",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "update customer copy tag success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/print_tasks",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get print tasks",
                    "notes": "get print tasks",
                    "type": "void",
                    "nickname": "getPrintTasksV2",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_no",
                            "description": "The order no",
                            "required": false,
                            "type": "number",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "restaurant_ids",
                            "description": "The order ids",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "task_status",
                            "description": "The task status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DONE","NOT_DONE"],
                            "allowMultiple": false
                        },
                        {
                            "name": "print_usage",
                            "description": "The task status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["PASS","KITCHEN"],
                            "allowMultiple": false
                        },
                        {
                            "name": "come_from",
                            "description": "where the print task created",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["Mini_App","FanDine_App"],
                            "allowMultiple": false
                        },
                        {
                            "name": "is_expired",
                            "description": "whether the print task expired",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["true","false"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "The number of order result for per page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update customer copy tag success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },
        {"path": "/v1/printer_status",
            "operations": [
                {
                    "method": "GET",
                    "summary": "get printer status",
                    "notes": "get printer status",
                    "type": "void",
                    "nickname": "getPrinterStatus",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "device_ids",
                            "description": "The device ids",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },
                        {
                            "name": "connect_status",
                            "description": "The printer connect status",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["CONNECTED","DISCONNECTED"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "current page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        },
                        {
                            "name": "pageSize",
                            "description": "The number of order result for per page",
                            "required": false,
                            "type": "number",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "get printer status success."
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v1/restaurants/{restaurant_id}/orders/{order_type}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get order list for employee",
                    "notes": "Get order list for employee",
                    "type": "void",
                    "nickname": "getRestaurantConfirmOrders",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "restaurant_id",
                            "description": "The restaurant's ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "order_type",
                            "description": "the order type",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":["DINNER", "TAKEOUT", "PREORDER", "DELIVERY"],
                            "allowMultiple": false
                        },
                        {
                            "name": "from",
                            "description": "The starting index of the record to be retrieved. For example, if you specify 10, this means the MongoDB will skip index numbers 0 to 9, returning only the records that start from 10th index. ",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "page_size",
                            "description": "The maximum number of records that should be included in the response. If you leave this blank, the default value is 10",
                            "required": false,
                            "type": "integer",
                            "paramType": "query"
                        },
                        {
                            "name": "table_id",
                            "description": "the table id,parameter for query dinner",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "allowMultiple": false
                        },

                        {
                            "name": "sort_order",
                            "description": "the result sort as DESC or ASC",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["DESC","ASC"],
                            "allowMultiple": false
                        },
                        {
                            "name": "query_type",
                            "description": "the pre-order query type:newest or urgent",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":["NEWEST","URGENT"],
                            "allowMultiple": false
                        },
                        {
                            "name": "start_time",
                            "description": "the start date: 2017-06-06T07:54:29.563Z",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Get orders successful",
                            "responseModel": "OrdersOnlyWithoutReview"
                        },
                        {
                            "code": 204,
                            "message": "Get orders successful, but there is no new content"
                        },
                        {
                            "code": 400,
                            "message": "INVALID_PARAMETER<p>{\"errorCode\":\"INVALID_PARAMETER\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 404,
                            "message": "DATA_NOT_EXIST<p>{\"errorCode\":\"DATA_NOT_EXIST\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/take_part_in_aa",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "take part in aa order",
                    "notes": "take part in aa order",
                    "type": "void",
                    "nickname": "updateOrderAACustomers",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "customer body",
                            "required": true,
                            "type": "CustomerAASchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update order customer success.",
                            "responseModel": "TipTotalAmountSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        },

        {"path": "/v2/orders/{order_id}/customer_mobile",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "update customer mobile",
                    "notes": "update customer mobile",
                    "type": "void",
                    "nickname": "updateOrderAACustomerMobile",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "order_id",
                            "description": "The order id",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "allowMultiple": false
                        },
                        {
                            "name": "body",
                            "description": "customer body",
                            "required": true,
                            "type": "CustomerAAMobileSchema",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "update order customer mobile success.",
                            "responseModel": "TipTotalAmountSchema"
                        },
                        {
                            "code": 400,
                            "message":"INVALID_PARAMETER.<p><p>{\"errorCode\":\"DATA_NOT_PRESENT\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"DATA_INVALID\", \"errorField\":\"xxxxxxx\", \"fieldValue\":\"xxxxxxx\"}<p>{\"errorCode\":\"REQUEST_MALFORMATED\"}",
                            "responseModel": "ErrorResponse"
                        },
                        {
                            "code": 500,
                            "message": "SERVER_ERROR<p>{\"errorCode\":\"SERVER_ERROR\", \"errorField\":\"keyword\", \"fieldValue\":\"xxxxxxx\"}",
                            "responseModel": "ErrorResponse"
                        }
                    ]
                }
            ]
        }
    ],

    "models": {
        "orderId": {
            "id": "orderId",
            "properties": {
                "id": {
                    "type": "string",
                    "required": true
                }
            }
        },
        "reservationId": {
            "id": "reservationId",
            "properties": {
                "id": {
                    "type": "string",
                    "required": true
                }
            }
        },
        "ErrorResponse": {
            "id": "ErrorResponse",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "errorField": {
                    "type": "string"
                },
                "fieldValue": {
                    "type": "string"
                }
            }
        },
        "ErrorMessage": {
            "id": "ErrorMessage",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                },
                "fieldValue": {
                    "type": "string"
                },
                "messages": {
                    "type": "string"
                }
            }
        }
    }
}
